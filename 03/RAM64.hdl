// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl

/**
 * Memory of 64 16-bit registers.
 * Built from 8 RAM8 chips.
 * The 6-bit address selects one of the 64 registers:
 *  - The top 3 bits select one of the 8 RAM8s
 *  - The bottom 3 bits select one of the registers inside that RAM8
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Divide o endereÃ§o: address[0..2] = internos da RAM8, address[3..5] = RAM8 a ser usada
    DMux8Way(in=load, sel=address[3..5], 
             a=load0, b=load1, c=load2, d=load3, 
             e=load4, f=load5, g=load6, h=load7);

    RAM8(in=in, load=load0, address=address[0..2], out=out0);
    RAM8(in=in, load=load1, address=address[0..2], out=out1);
    RAM8(in=in, load=load2, address=address[0..2], out=out2);
    RAM8(in=in, load=load3, address=address[0..2], out=out3);
    RAM8(in=in, load=load4, address=address[0..2], out=out4);
    RAM8(in=in, load=load5, address=address[0..2], out=out5);
    RAM8(in=in, load=load6, address=address[0..2], out=out6);
    RAM8(in=in, load=load7, address=address[0..2], out=out7);

    Mux8Way16(
        a=out0, b=out1, c=out2, d=out3, 
        e=out4, f=out5, g=out6, h=out7, 
        sel=address[3..5], out=out);
}
